{"version":3,"sources":["components/history.js","components/Nav.js","components/StratPage.js","db/QuestionsList.js","components/Quiz.js","components/Route.js","components/App.js","index.js"],"names":["history","Nav","className","Home","class","onClick","push","Component","QuestionsList","id","question","options","answer","Quiz","state","currIndex","userAnswer","score","end","disabled","positiveAnswers","downloadQuestion","questionListIndex","quizView","setState","nextQuestionHandler","concat","prevQuestionHandler","slice","finishBtnHandler","length","checkAnswer","this","prevProps","prevState","style","color","map","item","option","key","Routes","path","exact","component","StartPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f62883c7.chunk.js","sourcesContent":["import { createBrowserHistory as history } from 'history';\r\n\r\nexport default history();","import React from 'react';\r\nimport '../style/Nav.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <p>Covid - 19</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\r\nimport history from './history';\r\nimport Nav from './Nav';\r\nimport '../style/StartPage.css'\r\n\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Nav />\r\n                <div className=\"wrapper\">\r\n                    <div className=\"Home\">\r\n                        <div className=\"text\">\r\n                            <h1>Covid - 19 Quiz</h1>\r\n                            <p>Check if you have symptoms of coronavirus</p>\r\n\r\n                        </div>\r\n                        <form>\r\n                            <button class=\"btnStart\" onClick={() => history.push('/quiz')}>Start</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"picture\"></div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","const QuestionsList = [\r\n    {\r\n        id: 0,\r\n        question: `Do you have contact with a person from abroad?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 1,\r\n        question: `Do you feel bed ?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 2,\r\n        question: `Do you have breathing problems ?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 3,\r\n        question: `Do you have a fever ?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 4,\r\n        question: `Do you have a cough ?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 5,\r\n        question: `Do you have shortness of breath?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 6,\r\n        question: `Do you have bone pain ?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 7,\r\n        question: `Do you have sore muscles?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 8,\r\n        question: `Do you have diarrhea ?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n    {\r\n        id: 9,\r\n        question: `Do you have heart problems ?`,\r\n        options: [`Yes`, `No`],\r\n        answer: `Yes`\r\n    },\r\n\r\n]\r\n\r\nexport default QuestionsList;","import React, { Component } from \"react\";\r\nimport QuestionsList from \"../db/QuestionsList\";\r\nimport Nav from \"./Nav\";\r\nimport history from \"./history\";\r\nimport \"../style/Quiz.css\";\r\nimport \"../style/style.css\";\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    currIndex: 0,\r\n    options: [],\r\n    userAnswer: null,\r\n    score: 0,\r\n    end: false,\r\n    disabled: true,\r\n    question: QuestionsList.question,\r\n    positiveAnswers: [],\r\n  };\r\n\r\n  downloadQuestion = () => {\r\n    const { currIndex } = this.state;\r\n    const questionListIndex = QuestionsList[currIndex];\r\n    return {\r\n      question: questionListIndex.question,\r\n      options: questionListIndex.options,\r\n      answer: questionListIndex.answer,\r\n    };\r\n  };\r\n\r\n  quizView = () => {\r\n    this.setState(() => {\r\n      return this.downloadQuestion();\r\n    });\r\n  };\r\n\r\n  nextQuestionHandler = () => {\r\n    const { userAnswer, answer, score, positiveAnswers, question } = this.state;\r\n\r\n    if (userAnswer === answer) {\r\n      this.setState({\r\n        score: score + 1,\r\n        positiveAnswers: positiveAnswers.concat(question),\r\n        userAnswer: null,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      currIndex: this.state.currIndex + 1,\r\n      userAnswer: null,\r\n    });\r\n  };\r\n\r\n  prevQuestionHandler = () => {\r\n    const { userAnswer, answer, score, positiveAnswers } = this.state;\r\n\r\n    if (userAnswer === answer) {\r\n      this.setState({\r\n        score: score - 1,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      score: score - 1,\r\n      positiveAnswers: positiveAnswers.slice(0, -1),\r\n      currIndex: this.state.currIndex - 1,\r\n    });\r\n  };\r\n\r\n  finishBtnHandler = () => {\r\n    const { score, positiveAnswers, userAnswer, answer, question } = this.state;\r\n    if (\r\n      this.state.currIndex === QuestionsList.length - 1 &&\r\n      userAnswer === answer\r\n    ) {\r\n      this.setState({\r\n        score: score + 1,\r\n        positiveAnswers: positiveAnswers.concat(question),\r\n        end: true,\r\n      });\r\n    } else if (this.state.currIndex === QuestionsList.length - 1) {\r\n      this.setState({\r\n        end: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.quizView();\r\n  }\r\n\r\n  checkAnswer = (answer) => {\r\n    this.setState({\r\n      userAnswer: answer,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.currIndex !== prevState.currIndex) {\r\n      this.setState(() => {\r\n        return this.downloadQuestion();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      question,\r\n      options,\r\n      currIndex,\r\n      userAnswer,\r\n      end,\r\n      positiveAnswers,\r\n    } = this.state;\r\n\r\n    if (end) {\r\n      return (\r\n        <>\r\n          <Nav />\r\n          <div className=\"Quiz-end\">\r\n            <h3>\r\n              You answered yes to {this.state.score} of {QuestionsList.length}{\" \"}\r\n              questions\r\n            </h3>\r\n            <h2>\r\n              {this.state.score > 3 ? (\r\n                <p style={{ color: \"#FF000C\" }}>\r\n                  You answered yes to more than half of the questions you should\r\n                  contact to your doctor\r\n                </p>\r\n              ) : (\r\n                <p>\r\n                  There is no reason to worry, but if you feel unwell go to your\r\n                  doctor\r\n                </p>\r\n              )}\r\n            </h2>\r\n            <span>All the questions you answered yes:</span>\r\n            <ul>\r\n              {positiveAnswers.map((item) => (\r\n                <li className=\"options\">{item}</li>\r\n              ))}\r\n            </ul>\r\n            <form>\r\n              <button class=\"btnStart\" onClick={() => history.push(\"/\")}>\r\n                Exit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Nav />\r\n        <div className=\"wrap\">\r\n          <div className=\"Quiz\">\r\n            <h2>{question}</h2>\r\n            <span>{`Question ${currIndex + 1} of ${\r\n              QuestionsList.length\r\n            }`}</span>\r\n            {options.map((option) => (\r\n              <p\r\n                key={option.id}\r\n                className={`options ${\r\n                  userAnswer === option ? \"selected\" : null\r\n                }`}\r\n                onClick={() => this.checkAnswer(option)}\r\n              >\r\n                {option}\r\n              </p>\r\n            ))}\r\n            <div className=\"btnFlex\">\r\n              {currIndex >= 1 && currIndex <= QuestionsList.length - 1 && (\r\n                <button onClick={this.prevQuestionHandler}>Prev</button>\r\n              )}\r\n\r\n              {currIndex < QuestionsList.length - 1 && (\r\n                <button onClick={this.nextQuestionHandler}>Next</button>\r\n              )}\r\n\r\n              {currIndex === QuestionsList.length - 1 && (\r\n                <button onClick={this.finishBtnHandler}>Finish</button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport StartPage from './StratPage';\r\nimport Quiz from './Quiz';\r\nimport history from './history';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={StartPage} />\r\n                    <Route path=\"/quiz\" component={Quiz} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Route from './Route';\n\nconst App = () => {\n  return (\n    <div >\n      <Route />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}